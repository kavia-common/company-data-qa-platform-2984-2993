{"is_source_file": true, "format": "Python", "description": "This file implements a retrieval-augmented generation (RAG) pipeline for answering questions, including question embedding, document retrieval with FAISS, context construction, calling an LLM, and persisting results.", "external_files": ["../models", ".config", ".embeddings", ".faiss_index", ".openai_client"], "external_methods": ["django.db.transaction", "Question.objects.create", "Answer.objects.create", "DocumentChunk.objects.filter", "DocumentChunk.objects.select_related", "ensure_index_in_sync", "embed_texts", "get_faiss_index", "generate_answer"], "published": ["ask_question"], "classes": [], "methods": [{"name": "Dict ask_question(text: str, user: UserProfile | None = None)", "description": "Executes a RAG workflow to answer a user's question, including embedding, retrieval from FAISS, context assembly, LLM call, and storing question/answer records.", "scope": "", "scopeKind": ""}], "calls": ["ensure_index_in_sync()", "embed_texts([text])", "get_faiss_index().search(q_vec, top_k=SETTINGS.rag_top_k)", "DocumentChunk.objects.filter(id__in=[cid for cid, _ in results])", "DocumentChunk.objects.select_related(\"document\")", "generate_answer(text, context_snippets)", "Question.objects.create(...)", "Answer.objects.create(...)"], "search-terms": ["RAG pipeline", "faiss retrieval", "question embedding", "Answer creation", "document chunks", "generate_answer", "ask_question"], "state": 2, "file_id": 25, "knowledge_revision": 52, "git_revision": "", "ctags": [{"_type": "tag", "name": "ask_question", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/services/rag.py", "pattern": "/^def ask_question(text: str, user: UserProfile | None = None) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(text: str, user: UserProfile | None = None)"}], "hash": "8695f69e6e5f478cd96f8b06865e031d", "format-version": 4, "code-base-name": "qanda_backend", "filename": "qanda_backend/api/services/rag.py", "revision_history": [{"52": ""}]}