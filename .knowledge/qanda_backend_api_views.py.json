{"is_source_file": true, "format": "Python", "description": "This file contains Django REST Framework views for a backend API, including endpoints for health checks, user profile management, document management with chunking and embedding, text embedding generation, and a question-answering interface utilizing RAG (Retrieval-Augmented Generation) methods.", "external_files": ["django.db", "django.shortcuts", "rest_framework.decorators", "rest_framework.permissions", "rest_framework.response", "rest_framework", "rest_framework.views", "drf_yasg.utils", "drf_yasg", "./models", "./serializers", "./services/tokenizer", "./services/embeddings", "./services/faiss_index", "./services/rag", "./services/config"], "external_methods": ["transaction.atomic", "get_object_or_404", "swagger_auto_schema", "AllowAny", "Response", "status", "embed_texts", "count_tokens", "upsert_chunk_embedding", "ask_question", "SETTINGS"], "published": ["health", "UserProfileViewSet", "DocumentViewSet", "EmbeddingView", "QAView"], "classes": [{"name": "UserProfileViewSet", "description": "A viewset providing CRUD operations for user profiles."}, {"name": "DocumentViewSet", "description": "A viewset managing document creation, retrieval, updating, including adding chunks and embedding creation."}, {"name": "EmbeddingView", "description": "API view for generating text embeddings, useful for testing embedding integration."}, {"name": "QAView", "description": "API view for handling question-answering via RAG workflow."}], "methods": [{"name": "health(request)", "description": "Health check endpoint returning server status.", "scope": "", "scopeKind": ""}, {"name": "list(self, request, *args, **kwargs)", "description": "Lists all user profiles.", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"name": "create(self, request, *args, **kwargs)", "description": "Creates a new user profile.", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"name": "retrieve(self, request, *args, **kwargs)", "description": "Retrieves a specific user profile.", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"name": "update(self, request, *args, **kwargs)", "description": "Updates a user profile.", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"name": "create", "description": "Uploads or creates a document, optionally with chunks which are embedded."}, {"name": "partial_update(self, request, *args, **kwargs)", "description": "Partially updates a document, e.g., by adding a chunk.", "scope": "DocumentViewSet", "scopeKind": "class"}, {"name": "post(self, request)", "description": "Generates embeddings for a list of texts.", "scope": "QAView", "scopeKind": "class"}, {"name": "post", "description": "Handles asking a question with retrieval and generation pipeline."}], "calls": ["transaction.atomic", "get_object_or_404", "super().list", "super().create", "super().retrieve", "super().update", "DocumentSerializer", "embed_texts", "count_tokens", "upsert_chunk_embedding", "get_success_headers", "ask_question"], "search-terms": ["DocumentChunk", "RAG", "ask_question", "embed_texts", "upsert_chunk_embedding", "health", "UserProfile", "Document", "serializers", "APIView", "viewsets"], "state": 2, "file_id": 9, "knowledge_revision": 72, "git_revision": "8c501e32b9060d2803a95c7b6ecfa4f7be04b5ad", "revision_history": [{"28": "dc99dc136abd0e64e36f25003312aef372edc1c8"}, {"55": "dc99dc136abd0e64e36f25003312aef372edc1c8"}, {"70": "dc99dc136abd0e64e36f25003312aef372edc1c8"}, {"71": "8c501e32b9060d2803a95c7b6ecfa4f7be04b5ad"}, {"72": "8c501e32b9060d2803a95c7b6ecfa4f7be04b5ad"}], "ctags": [{"_type": "tag", "name": "DocumentViewSet", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^class DocumentViewSet(viewsets.ModelViewSet):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "EmbeddingView", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^class EmbeddingView(APIView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "QAView", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^class QAView(APIView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserProfileViewSet", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^class UserProfileViewSet(mixins.CreateModelMixin,$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def create(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "DocumentViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def create(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^def health(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def list(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "partial_update", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def partial_update(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "DocumentViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def post(self, request):$/", "language": "Python", "kind": "member", "signature": "(self, request)", "scope": "EmbeddingView", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def post(self, request):$/", "language": "Python", "kind": "member", "signature": "(self, request)", "scope": "QAView", "scopeKind": "class"}, {"_type": "tag", "name": "queryset", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    queryset = Document.objects.all().order_by(\"-created_at\")$/", "language": "Python", "kind": "variable", "scope": "DocumentViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "queryset", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    queryset = UserProfile.objects.all().order_by(\"-created_at\")$/", "language": "Python", "kind": "variable", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "retrieve", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def retrieve(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "serializer_class", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    serializer_class = DocumentSerializer$/", "language": "Python", "kind": "variable", "scope": "DocumentViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "serializer_class", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    serializer_class = UserProfileSerializer$/", "language": "Python", "kind": "variable", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def update(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "UserProfileViewSet", "scopeKind": "class"}], "hash": "f9fd73dbb2a4240569e0a002231e59f2", "format-version": 4, "code-base-name": "qanda_backend", "filename": "qanda_backend/api/views.py", "fields": [{"name": "queryset = Document.objects.all().order_by(\"-created_at\")", "scope": "DocumentViewSet", "scopeKind": "class", "description": "unavailable"}, {"name": "queryset = UserProfile.objects.all().order_by(\"-created_at\")", "scope": "UserProfileViewSet", "scopeKind": "class", "description": "unavailable"}, {"name": "serializer_class = DocumentSerializer", "scope": "DocumentViewSet", "scopeKind": "class", "description": "unavailable"}, {"name": "serializer_class = UserProfileSerializer", "scope": "UserProfileViewSet", "scopeKind": "class", "description": "unavailable"}]}