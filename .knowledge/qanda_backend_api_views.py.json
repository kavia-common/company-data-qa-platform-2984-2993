{"is_source_file": true, "format": "Python", "description": "This file defines API views for a backend service, including endpoints for health checks, user profile management, document upload and management, embedding generation, and question-answering functionality using RAG (Retrieval-Augmented Generation). It uses Django REST Framework and Swagger for API documentation.", "external_files": [".models", ".serializers", ".services.tokenizer", ".services.embeddings", ".services.faiss_index", ".services.rag", ".services.config"], "external_methods": ["django.shortcuts.get_object_or_404", "rest_framework.decorators.api_view", "rest_framework.decorators.permission_classes", "rest_framework.response.Response", "rest_framework.status", "rest_framework.viewsets.ModelViewSet", "rest_framework.mixins.CreateModelMixin", "rest_framework.mixins.ListModelMixin", "rest_framework.mixins.RetrieveModelMixin", "rest_framework.mixins.UpdateModelMixin", "rest_framework.viewsets.GenericViewSet", "drf_yasg.utils.swagger_auto_schema", "drf_yasg.openapi"], "published": ["health", "UserProfileViewSet", "DocumentViewSet", "EmbeddingView", "QAView"], "classes": [{"name": "UserProfileViewSet", "description": "Handles CRUD operations for user profiles with API endpoints."}, {"name": "DocumentViewSet", "description": "Manages document objects and their chunks, including creation and partial updates."}, {"name": "EmbeddingView", "description": "Provides endpoint to generate text embeddings."}, {"name": "QAView", "description": "Provides Q&A endpoint for retrieving answers via RAG workflow."}], "methods": [{"name": "health(request)", "description": "Simple health check endpoint to verify server is operational.", "scope": "", "scopeKind": ""}, {"name": "list(self, request, *args, **kwargs)", "description": "Lists user profiles.", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"name": "create(self, request, *args, **kwargs)", "description": "Creates a new user profile.", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"name": "retrieve(self, request, *args, **kwargs)", "description": "Retrieves a specific user profile.", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"name": "update(self, request, *args, **kwargs)", "description": "Updates a user profile.", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"name": "create", "description": "Creates a new document, optionally with chunks and embeddings."}, {"name": "partial_update(self, request, *args, **kwargs)", "description": "Adds a chunk to an existing document.", "scope": "DocumentViewSet", "scopeKind": "class"}, {"name": "post(self, request)", "description": "Generates embeddings for input texts.", "scope": "QAView", "scopeKind": "class"}, {"name": "post", "description": "Handles a question submission and returns an answer with references."}], "calls": ["django.shortcuts.get_object_or_404", "rest_framework.response.Response", "rest_framework.status", "super().list", "super().create", "super().retrieve", "super().update", "DocumentChunk.objects.create", "embed_texts", "upsert_chunk_embedding", "get_object_or_404", "ask_question", "QuestionSerializer", "AnswerSerializer"], "search-terms": ["api views", "document chunks", "embedding generation", "question answering", "RAG", "faiss index", "user profile management", "Swagger API", "health check", "document upload"], "state": 2, "file_id": 9, "knowledge_revision": 70, "git_revision": "dc99dc136abd0e64e36f25003312aef372edc1c8", "revision_history": [{"28": "dc99dc136abd0e64e36f25003312aef372edc1c8"}, {"55": "dc99dc136abd0e64e36f25003312aef372edc1c8"}, {"70": "dc99dc136abd0e64e36f25003312aef372edc1c8"}], "ctags": [{"_type": "tag", "name": "DocumentViewSet", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^class DocumentViewSet(viewsets.ModelViewSet):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "EmbeddingView", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^class EmbeddingView(APIView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "QAView", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^class QAView(APIView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserProfileViewSet", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^class UserProfileViewSet(mixins.CreateModelMixin,$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def create(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "DocumentViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def create(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^def health(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def list(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "partial_update", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def partial_update(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "DocumentViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def post(self, request):$/", "language": "Python", "kind": "member", "signature": "(self, request)", "scope": "EmbeddingView", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def post(self, request):$/", "language": "Python", "kind": "member", "signature": "(self, request)", "scope": "QAView", "scopeKind": "class"}, {"_type": "tag", "name": "queryset", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    queryset = Document.objects.all().order_by(\"-created_at\")$/", "language": "Python", "kind": "variable", "scope": "DocumentViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "queryset", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    queryset = UserProfile.objects.all().order_by(\"-created_at\")$/", "language": "Python", "kind": "variable", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "retrieve", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def retrieve(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "serializer_class", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    serializer_class = DocumentSerializer$/", "language": "Python", "kind": "variable", "scope": "DocumentViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "serializer_class", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    serializer_class = UserProfileSerializer$/", "language": "Python", "kind": "variable", "scope": "UserProfileViewSet", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/views.py", "pattern": "/^    def update(self, request, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, request, *args, **kwargs)", "scope": "UserProfileViewSet", "scopeKind": "class"}], "hash": "666350bbc50d56b0660c4f1d662f87ca", "format-version": 4, "code-base-name": "qanda_backend", "filename": "qanda_backend/api/views.py", "fields": [{"name": "queryset = Document.objects.all().order_by(\"-created_at\")", "scope": "DocumentViewSet", "scopeKind": "class", "description": "unavailable"}, {"name": "queryset = UserProfile.objects.all().order_by(\"-created_at\")", "scope": "UserProfileViewSet", "scopeKind": "class", "description": "unavailable"}, {"name": "serializer_class = DocumentSerializer", "scope": "DocumentViewSet", "scopeKind": "class", "description": "unavailable"}, {"name": "serializer_class = UserProfileSerializer", "scope": "UserProfileViewSet", "scopeKind": "class", "description": "unavailable"}]}