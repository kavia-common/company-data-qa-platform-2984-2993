{"is_source_file": true, "format": "Python", "description": "A utility module for counting tokens in text, using tiktoken if available, otherwise falling back to a word-based count.", "external_files": ["tiktoken"], "external_methods": ["tiktoken.get_encoding", "enc.encode"], "published": ["count_tokens"], "classes": [], "methods": [{"name": "int count_tokens(text: str, model: Optional[str] = None)", "description": "Counts tokens in a text string using tiktoken if available, otherwise uses a fallback method.", "scope": "", "scopeKind": ""}], "calls": ["tiktoken.get_encoding", "enc.encode", "len", "max", "text.split"], "search-terms": ["token counting", "tiktoken", "fallback", "text processing"], "state": 2, "file_id": 21, "knowledge_revision": 44, "git_revision": "", "ctags": [{"_type": "tag", "name": "count_tokens", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/services/tokenizer.py", "pattern": "/^def count_tokens(text: str, model: Optional[str] = None) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(text: str, model: Optional[str] = None)"}, {"_type": "tag", "name": "tiktoken", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2993/qanda_backend/api/services/tokenizer.py", "pattern": "/^    tiktoken = None$/", "language": "Python", "kind": "variable"}], "hash": "91f72418ecbbe8b2ee9c74c920f2a3ca", "format-version": 4, "code-base-name": "qanda_backend", "filename": "qanda_backend/api/services/tokenizer.py", "fields": [{"name": "tiktoken = None", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"44": ""}]}